//this is an imageJ macro that will take a .nd2 microscope image, split its channels into multiple images, 
//perform a z projection of each of those images, add a scale bar, and save those images as PNGs or Tiffs.

macro "imageprocessor []" {
//get filepath
path = getDirectory("image");

//get file name
filename = getTitle();
filenameshort = filename.substring(0, lengthOf(filename) - 4);
folder = path + filenameshort;

//create folder with same name as file
File.makeDirectory(folder);

getDimensions(width, height, channels, slices, frames);
run("Duplicate...", "duplicate");
//if its a z stack, do a projection
if (slices > 1) { 
	run("Z Project...", "projection=[Max Intensity]");
}
if (channels > 1) {
	run("Make Composite");
	saveAs("tiff", path + filenameshort + "/" + filenameshort + " composite.tiff");
	// (60x?) 
	//run("Scale Bar...", "width=50 height=49 thickness=18 font=42 color=White background=None location=[Lower Right] horizontal bold overlay");
	
	//10x
	run("Scale Bar...", "width=100 height=200 thickness=15 font=42 color=White background=None location=[Lower Right] horizontal bold overlay");
	saveAs("png", path + filenameshort + "/" + filenameshort + " composite.png");
} else {
	run("Duplicate...", "duplicate");
	saveAs("tiff", path + filenameshort + "/" + filenameshort + " no scale bar.tiff");
	saveAs("png", path + filenameshort + "/" + filenameshort + " no scale bar.png");
	close();
	// (60x?) 
	//run("Scale Bar...", "width=50 height=49 thickness=18 font=42 color=White background=None location=[Lower Right] horizontal bold overlay");
	
	//10x
	run("Scale Bar...", "width=100 height=200 thickness=15 font=42 color=White background=None location=[Lower Right] horizontal bold overlay");
	saveAs("tiff", path + filenameshort + "/" + filenameshort + " scale bar.tiff");
	saveAs("png", path + filenameshort + "/" + filenameshort + " scale bar.png");
}
close();


	//the z-project fuction opens up a new, separate window for the projection. 
	//so, these save-as lines will save that window, and that window will be closed by the close function.
	//then the next close function closes the window of the original channel image.
	// if there is no z stack, and thus no z stack window being opened, then the second close command would close the window for the next channel. 
	//so it is only for z stacks

if (channels == 1) { 
	close();
} else {
	selectWindow(filename);
	run("Split Channels");
	selectWindow("C1-" + filename);
	if (slices > 1) {
		run("Z Project...", "projection=[Max Intensity]");
	}
	saveAs("tiff", path + filenameshort + "/" + filenameshort + " C1.tiff");
	saveAs("PNG", path + filenameshort + "/" + filenameshort + " C1.png");
	close();
	if (slices > 1) {
		close();
	}
	selectWindow("C2-" + filename);
	if (slices > 1) {
		run("Z Project...", "projection=[Max Intensity]");
	}
	saveAs("tiff", path + filenameshort + "/" + filenameshort + " C2.tiff");
	saveAs("PNG", path + filenameshort + "/" + filenameshort + " C2.png");
	close();
	if (slices > 1) {
		close();
	}
}

if (channels > 2) {
	selectWindow("C3-" + filename);
	if (slices > 1) {
		run("Z Project...", "projection=[Max Intensity]");
	}
	saveAs("tiff", path + filenameshort + "/" + filenameshort + " C3.tiff");
	saveAs("PNG", path + filenameshort + "/" + filenameshort + " C3.png");
	close();
	if (slices > 1) {
		close();
	}
}

if (channels > 3) {
	selectWindow("C4-" + filename);
	if (slices > 1) {
		run("Z Project...", "projection=[Max Intensity]");
	}
	saveAs("tiff", path + filenameshort + "/" + filenameshort + " C4.tiff");
	saveAs("PNG", path + filenameshort + "/" + filenameshort + " C4.png");
	close();
	if (slices > 1) {
		close();
	}
}
if (slices > 1) {
		close();
	}
}